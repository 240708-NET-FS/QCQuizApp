Category:HTML & CSS;Question:Define what HTML is.;Answer:HTML stands for Hypertext Markup Language. It’s a form of markup language that is used for making web pages.
Category:HTML & CSS;Question:Describe the structure of an HTML Document and what is included in the different sections.;Answer:The file opens with an html tag (maybe a doctype too) followed by a header with a head tag, then a body using the body tag. Headers contain metadata like title and style. The body contains headings and paragraphs as well as the majority of the text content..
Category:HTML & CSS;Question:List HTML Common Tags and why they are different from divs.;Answer:The most common tags are paragraph, link, lists, images, buttons and headings. Div creates a division within the document. This allows for style changes and general organization.
Category:HTML & CSS;Question:Describe how/where you link an external CSS sheet into an HTML Document.;Answer: You link it in the header and use <link rel = “style sheet” type = “text/css” href = “styles.css”/>
Category:HTML & CSS;Question:Describe how/where you link an external JS sheet into an HTML Document.;Answer:Using the script tag in the header. <script src=”x.js”>...</script>.
Category:HTML & CSS;Question:Understand the structure of a CSS style rule.;Answer:A CSS rule contains selectors and declarations. The selector points to an html element, the declaration styles the element.
Category:HTML & CSS;Question:Understand and explain the CSS box model.;Answer:The CSS Box Model describes a design and layout of your HTML web page. Much like its name, it wraps around every HTML element, consisting of content, padding, borders and margins. 
Category:HTML & CSS;Question:Describe the different ways to add styling to an HTML Document.;Answer:The most common way is to use a CSS file that’s linked in the header. You can also use inline CSS and a variety of built in HTML style features.
Category:HTML & CSS;Question:Understand the correct syntax for styling different elements such as by tag,class,id,etc.;Answer:Tags are denoted simply by their name, classes are marked by a dot before them, and an ID uses a hash before the name. So p is a paragraph tag, .code is a class named code, and #code is an id named code.
Category:HTML & CSS;Question:What is the CSS priority in regards to inline,internal and external.;Answer:The order of priority from highest to lowest is inline, internal & embedded, then external. Inline CSS is just CSS written on the line it’s used. Internal is CSS in the document but not the given line, so like a class being used in the header of the document. External is an external CSS file that is linked in the header. Priority of internal code prioritizes inline code, then IDs, then classes, and lastly elements.
Category:HTML & CSS;Question:Please construct an HTML form.;Answer:A form allows a user to input something. A form uses a form tag as well as form elements, which are like inputs or labels.. Example.
Category:HTML & CSS;Question:How do you add comments to an HTML Document.;Answer: You add them by typing in ‘<! -- ‘ and ending with ‘-->' (Less than, exclamation mark, two dashes, then finish with two dashes, greater than)
Category:HTML & CSS;Question:Describe the syntax of different HTML elements/tags including the table tag.;Answer:Div makes a division or section in the document, p marks a paragraph, a marks a hyperlink, img marks an embedded image, ul makes an unordered list, ol makes an ordered list, li makes a list item, table defines a table, tr makes a table row, th makes a table header cell, td makes a data cell, form makes a form, input defines an input within a form, button makes a clickable button, h1-h6 make headings, span makes a generic inline container, label labels an input element. As for syntax, div, table, need to be filled out, and both unordered and ordered lists need list items. These elements are wrapped in an opening and closing tag, so <form>...</form> for form. p, li, tr, th, td, button, headings, and span all wrap their content with opening and closing tags, so <p> content </p>. a requires a reference in its first tag (<a href=”...”>), img requires a source and alt in its first tag (<img src=”” alt=”” >) and does not require a closing tag, input requires a type in its opening tag (<input type=”...”>) and does not require a closing tag, and label requires a for in its opening tag (<label for=”...”>...</label>).
Category:HTML & CSS;Question:How do you take in user input using a variety of input tags (text,checkbox,etc).;Answer:Utilizing the input tag, then the type of the input can vary from context to context. ‘Text’, ‘checkbox’,and ‘number’ are all types of input, with ‘text’ being the default. You would get the value of the input by reading its ‘value’ attribute.
Category:HTML & CSS;Question:Describe how to use Bubbling and the correct syntax for it.;Answer:’Bubbling’ and ‘capturing’ are two ways of event propagation in the HTML DOM API, when an event occurs in an element inside another element, and both elements have registered a handle for that event. The syntax for it would be to declare two functions, for example ‘bubble’ and ‘capture’, then addEventListeners for both functions on the same HTML control. Bubbling solves the child issue first, and goes upward from there, “bubbling to the top”.
Category:HTML & CSS;Question:Describe the benefits of combinators and how to use them.;Answer:CSS combinators are special characters that define the relationship between two CSS selectors. They are used to select elements based on their relationship in the HTML structure, allowing for precise and efficient styling.
Category:HTML & CSS;Question:How would you make responsive webpages using CSS.;Answer: Use the ‘@media’ query to make the elements have specific behavior e.g. @media (max-width- 1250px) {/* … */}
Category:Typescript;Question:What are the differences between Typescript and Javascript.;Answer:Javascript is weakly and dynamically typed. Typescript is strictly and statically typed. This means that in Javascript, you do not need to declare the type of a variable as it is interpreted at runtime, and it is also dynamic. While with Typescript, which is built upon Javascript, you must declare the type of all variables, and these types cannot be changed mid-program. 
Category:Typescript;Question:How would you use Typescript outside of React/Angular.;Answer: You can compile and use Typescript using the Node runtime environment. 
Category:Typescript;Question:How do you declare and use an enum in TypeScript.;Answer:You declare the enum with ‘enum’, then a name for the enum variable. In curly brackets, you would then declare names, such as ‘North’, ‘South’, ‘East’ and so on. It’s important to note that in Typescript, an enum always starts at 0, and the following values increase by 1. You would then use your enum in the code with ‘enumName.enumVariable’.
Category:Typescript;Question:What different TypeScript-unique features transpile to in JavaScript.;Answer:TypeScript is known as an Object-oriented programming language whereas JavaScript is a prototype-based language.TypeScript has a feature known as Static typing but JavaScript does not support this feature.TypeScript supports Interfaces but JavaScript does not.
Category:Typescript;Question:What is the proper syntax for declaring a strong static type.;Answer:let age- number = 20;.
Category:Typescript;Question:How would you implement OOP in Typescript.;Answer: You can implement OOP in typescript by declaring an interface that defines the properties that an object must have and the types those properties can have. Inheritance comes by way of having another object type as a property type. 
Category:Typescript;Question:What is the process of Transpilation and its importance in web development;Answer:Transpilation plays a critical role in modern web development by enabling developers to write code in advanced languages or using modern syntax features and then converting that code into a version that is compatible with a broader range of environments.
Category:Javascript;Question:Describe what JS is.;Answer: Javascript is a weakly dynamically typed multiparadigm interpreted programming language widely used for adding behavior to web pages 
Category:Javascript;Question:Describe what type coercion is.;Answer:Type Coercion refers to the process of automatic or implicit conversion of values from one data type to another. This includes conversion from Number to String, String to Number, Boolean to Number, etc
Category:Javascript;Question:Describe what truthy/falsy is.;Answer: Truthy is anything that evaluates to true in a boolean context which is most things excluding null, empty string and undefined as well as boolean false and 0 
Category:Javascript;Question:Describe the different variable scopes in JS.;Answer: variables can be global scoped which is available to all contexts on a page / block scoped - available to the block of code (loop) they live in / function or local  scoped - available to the function that they are declared in  
Category:Javascript;Question:Talk about the different data types in JS.;Answer: Number/bigint/symbol/boolean/string/null/undefined/Object (includes functions) 
Category:Javascript;Question:How do you Create variables in JS.;Answer: just declare name = value e.g. x = 5 
Category:Javascript;Question:How do you Create objects in JS.;Answer: name = {key, value}/ can separate key value pairs with commas. It is the key colon value for the object declaration.
Category:Javascript;Question:Describe what the DOM is.;Answer: A tree-based structure representing the elements and text content in the HTML document with the document at the root 
Category:Javascript;Question:How do you Query the DOM for elements.;Answer: the DOM API provides methods to our javascript including getElementById / appendChild/ createElement
Category:Javascript;Question:Describe what event listeners are.;Answer: event listeners are javascript functions that you can attach to an html element to run as part of the event loop 
Category:Javascript;Question:Describe what bubbling and capturing are and their difference.;Answer: there are three phases to event handling  - 1. Capturing - the event focuses down to the innermost element that was acted on running handlers on all of its ancestors on the way down /  2. Target - the event handler for the target element runs / 3. Bubbling - the event handlers are invoked in order of the ancestors of the target element back out to the document . event handlers mainly deal with stages 2 and 3 but you can change that by setting {capture- true} in options 
Category:Javascript;Question:Describe what JS is.;Answer:JavaScript is a scripting or programming language that allows you to implement complex features on web pages
Category:Javascript;Question:List the steps to sending an HTTP request using the Fetch API.;Answer:You start by calling fetch(), passing it a request object or a string containing the URL. You can attach an object containing the body and request method (default is ‘get’) The fetch will then return a promise, which is the completion or failure of an asynchronous operation and its value.
Category:Javascript;Question:Describe what type of object the Fetch API returns.;Answer:Fetch returns a promise object that holds a response object.
Category:Javascript;Question:Describe what function and variable hoisting is.;Answer:Hoisting refers to the built-in behavior of the language through which declarations of functions, variables, and classes are moved to the top of their scope – all before code execution. In turn, this allows us to use functions, variables, and classes before they are declared.
Category:Javascript;Question:Describe what async/await is and how they compare to using .then().;Answer:The difference between then() and async/await is that when a promise needs to get resolved in a function having then(), the function containing then() doesn't get suspended from the call stack. It remains in the call stack till the promise gets resolved. Whereas, in the async/await, when the resolve() keyword is encountered, the async function is suspended from the call stack, and the thread remains inactive if the async function is the entry point of the event handler. Only when the promise resolves, the async function gets pushed again in the call stack.
Category:Javascript;Question:How do you Handle errors in JS.;Answer:You utilize the ‘try’, ‘catch’, ‘throw’ and ‘finally’ keywords. ‘Try’ will execute the code within it’s brackets, with ‘catch’ being executed if the code within ‘try’ encounters an error. ‘Finally’ will always execute no matter what the resulting code is. ‘Throw’ allows you to define a custom error, which may lead to more useful debugging statements.
Category:Javascript;Question:How do you Create arrays in JS.;Answer:const  array1 = [“value1”, “value2”]
Category:Javascript;Question:Talk about all the different array methods and how to use them.;Answer: Important array methods include filter, reduce, and map. Filter accepts a callback that returns either true or false as an argument and will return the array elements that return true when the callback is executed on them. Reduce accepts a callback as an argument and will store the result of evaluating the callback on each element of the array in the accumulator - then return the final value of the accumulator (you also pass in the start value or have it default to the first element of the array). Map accepts a callback and returns an array whose elements are the returned result of invoking the callback on each corresponding element of the array. 
Category:Javascript;Question:Talk about the different functions in JS.;Answer:There are four broad types of functions. Regular functions- can return anything, always runs to completion after invocation. Generator functions- returns a Generator object, and it can be paused and resumed with the yield operator. Async functions returns a Promise and can be paused and resumed with the await operator.Async generator function, which returns an AsyncGenerator object and both the await and yield operators can be used.
Category:Javascript;Question:How do you Use template literals.;Answer:Template literals are literals delimited with backtick (`) characters, allowing for multi-line strings, string interpolation with embedded expressions, and special constructs called tagged templates. Template literals are sometimes informally called template strings, because they are used most commonly for string interpolation (to create strings by doing substitution of placeholders). However, a tagged template literal may not result in a string; it can be used with a custom tag function to perform whatever operations you want on the different parts of the template literal.
Category:Javascript;Question:How do you Loop through arrays.;Answer: Use for loop / for…in / for… of / list.forEach() 
Category:Javascript;Question:How do you Insert new elements into the DOM.;Answer:To create a new HTML element, you have to use the [document.createElement()](https-//developer.mozilla.org/en-US/docs/Web/API/Document/createElement) method. const el = document. createElement("div")
Category:Javascript;Question:How do you Handle a failed request when using the Fetch API.;Answer:try/catch is used to get errors when the promise gets rejected (network or CORS issues) response. ok is used to handle server errors (404 or 500, for example) when the promise gets resolved.
Category:Javascript;Question:Describe what the ‘this’ keyword is.;Answer: ‘this’ is a keyword that refers to an object, depending on context. In an object method ‘this’ refers to the object. Alone, ‘this’ refers to the global object. It is not a variable, its value cannot be changed
Category:Javascript;Question:Describe the characteristics of functional programming.;Answer: Functions are first class citizens of the language (in an OO programming language classes are and functions can only exist as class methods) 
Category:Javascript;Question:Describe how guard and default operators work.;Answer:Assuming we have a variable by name of  ‘someObject’, Default would be declared with ‘someObject = objectA || {}’. In this example, if objectA were to be coerced into being false, then the brackets would act as a default value. Otherwise, someObject would reference objectA. Guard is done in a similar manner, by using ‘&&’ (ampersands). If ‘someObject = objectA && objectB’, and objectA was coerced into being false, then someObject would reference objectA. Otherwise, someObject would reference objectB.
Category:Javascript;Question:How do you Create callback functions?;Answer: pass a function in as an argument to another function
Category:Javascript;Question:How do you Create arrow functions?;Answer: const func = () => {} 
Category:Javascript;Question:How do you Create anonymous functions?;Answer: () => {} ( no declaration) 
Category:Javascript;Question:Tell the difference between for of and for in.;Answer: for… of access values, in an object , for … in accesses keys 
Category:Javascript;Question:Describe some methods on the event object and what they do.;Answer:stopPropagation() - ends the bubbling phase on the current element 
Category:Javascript;Question:Describe the different promise methods.;Answer:There is all, which returns a single Promise from a list of promises and executes when all promises fulfill. allSettled, which returns a single Promise from a list of promises, and executes when all promises settle. Any, which returns a single Promise from a list of promises, and executes when any promise fulfills. Race, which returns a single Promise from a list of promises, and executes when the faster promise settles. Reject, which returns a Promise object rejected with a value. Resolve, which returns a Promise object resolved with a value. Catch, which provides a function to be called when a promise is rejected. Finally, which provides a function to be called when a promise is fulfilled or rejected. Lastly there is then, which provides two functions to be called when a promise is fulfilled or rejected
Category:Javascript;Question:Describe how inheritance works in JS.;Answer:JavaScript implements inheritance by using objects. Each object has an internal link to another object called its prototype.
Category:React;Question:How do you Create Function Components.;Answer:We can create a functional component in React by writing a JavaScript function. These functions may or may not receive data as parameters. In the functional Components, the return value is the JSX code to render to the DOM tree
Category:React;Question:Describe how Single Page Applications work differently from Multi Page Applications.;Answer:Single page applications work within a single browser session and allow users to jump between parts of the system without requiring the entire page to reload. On the other hand, multi-page applications require a new page to be loaded every time the user interacts with the application.
Category:React;Question:What are the most common hooks in react and how are they used?;Answer:useState-Allows you to use state in a functional component.useEffect-Allows you to perform side effects in a functional component, such as fetching data from an API or updating the document title.useContext-Allows you to use context in a functional component.useReducer-Allows you to use a reducer to manage state in a functional component.useCallback- Allows you to memoize a function so that it only changes when its dependencies change.useMemo- Allows you to memoize a value so that it only changes when its dependencies change.useRef-Allows you to create a mutable ref object that persists for the lifetime of the component.
Category:React;Question:How do you Pass props into a Component.;Answer:To pass props, add them to the JSX, just like you would with HTML attributes. To read props, use the function Avatar({ person, size }) destructuring syntax. You can specify a default value like size = 100 , which is used for missing and undefined props.
Category:React;Question:How do you Create a JSX file and what is it?.;Answer:JSX stands for JavaScript XML. It allows us to write HTML in React and makes it easier to write and add HTML in React. You make the file a JSX file by adding the ‘.jsx’ extension at the end.
Category:React;Question:How do you use Axios or Fetch to make HTTP requests.;Answer:In order to use Axios, we would use the request, get, delete, head, options, post, put, or patch methods. Using fetch is the same as it is in javascript, by using the fetch method.
Category:React;Question:How do you set up routing between Components?;Answer: By wrapping the entire application, or specific parts of your application with the BrowserRouter. Doing this allows you to enable client-side routing for all child components within the router. You would then navigate the pages using the Route Component.
Category:React;Question:How is data handled in React?;Answer:Data is immutable, Data always flows down, React is lightweight and un-opinioned.
Category:React;Question:What are the different types of function components and how do you create them?;Answer:React functional components are just normal JavaScript functions; we can create them using specific function keywords. Most developers create functional components using the Arrow function. The functional component’s primary purpose is to render the view and the data to the browser.In other words, functional components accept data, or more technically, it takes props as a function argument and returns the data in valid JSX form.  
Category:React;Question:How do you add additional NPM libraries to a React Project to add new, already created functionality.;Answer:You would use ‘npm install – save packageName’, where packageName is the name of the package. Doing this will save the library to your package.json, and can easily be updated using ‘npm update’.
Category:React;Question:How do you create multiple contexts with createContext().;Answer:To use multiple contexts, you create each context using React. createContext and then use a Context. Provider to pass the current context value to the tree below. Any component in the tree can access the value by using a Context
Category:React;Question:How do you wrap components and distribute the application state?;Answer:It starts with importing the necessary modules from React and any other libraries you use. Then, you define the function or class that represents your wrapper component.
Category:React;Question:How would you use .UseReducer and .UseContext?;Answer:useReducer provides a way to manage complex state transitions in a more predictable and manageable way, while useContext allows you to pass data down the component tree without having to pass props manually through each level simply, making your data globally available.
Category:React;Question:How do you test components in React?;Answer:Testing a React application falls under two categories, Rendering component trees in a simplified test environment and asserting on their output, and Running a complete app in a realistic browser environment (also known as “end-to-end” tests). We would do this by using the Jest tool, or the React Testing Library.
Category:React;Question:How do you create parent-child routing.;Answer:You can use the Outlet component. By using this component, the Outlet will render the routes you put inside the /admin route.
Category:SQL;Question:What is the difference between a Function and a Stored Procedure?;Answer:Stored Procedures are reusable sets of SQL Statements that can accept parameters and return results. Functions are named operations that return a single value or table.
Category:SQL;Question:What are Query Commands?;Answer:They are statements using the SELECT keyword.
Category:SQL;Question:What is an Index and how do you use it?;Answer:An Index is used to retrieve data from the database more quickly than otherwise performed. You create it by using CREATE INDEX indexName ON tableName (column1, column2, etc).
Category:SQL;Question:How would you write an SQL statement to perform an outer join between two tables?;Answer:SELECT * FROM Table1 FULL OUTER JOIN Table2 ON (condition). Additionally can add in a Where clause or having clause like a normal select statement.
Category:SQL;Question:What are the different types of SQL joins?;Answer:Inner Join (Returns records that have matching values in both tables). Left Outer Join (Return all records from the left table, and the matched records from the right table.) Right Outer Join (Same as Left Outer Join, except all records from the right instead.) Full Outer Join Returns all records where there is a match in either left or right table.
Category:SQL;Question:What is a Primary Key?;Answer:The Primary Key uniquely identifies each record in a table. This is typically done in the form of an ID Column that isn't relevant to the data you're storing on your database. A Table can only have ONE primary key, and it is labelled in the Create Table statement as "PRIMARY KEY", or CONSTRAINT PK_ColumnName PRIMARY KEY (ColumnName, Column2).
Category:SQL;Question:What is a Foreign Key?;Answer:A foreign key is a primary key in another table that acts as a form of reference.
Category:SQL;Question:What is a Unique Key?;Answer:It is a constraint that ensures that all values in a column are different. A Primary Key is UNIQUE by default, due to it's purpose. However, you can have multiple UNIQUE constraints per table, unlike Primary Keys.
Category:SQL;Question:What is the identity keyword in SQL, and how do you use it?;Answer:Identity in MySql is listed as "Auto_Increment" during table creation. By labelling a column with this keyword, the column's entry will increase by 1 for each new record created. By default, the Identity squence starts with 1, but can be changed to start with any number the user wishes. In SQL Server, the Identity keyword is used, with two numbers added on for Table Creation. The first number is the starting value, while the second number is the increment.
Category:SQL;Question:Can you have multiple primary keys in a single table?;Answer:No, you can't.
Category:SQL;Question:Can you have multiple unique keys in a single table?;Answer:Yes, you can.
Category:SQL;Question:What is the difference between the Truncate and Delete commands?;Answer:DELETE is a command that removes one or multiple rows from a table based on a condition. Truncate will remove all rows, and cannot have a specific condition attached to it. In addition, Delete is a DML command while Truncate is a DDL command. 
Category:SQL;Question:How would you find all of the people who are under Age 30 under a table named 'People'?;Answer:Use the 'Where' clause to check if the entry's 'Age' column is below 30 or not. In other words, SELECT * FROM PEOPLE WHERE AGE < 30.
Category:SQL;Question:How do you create a table?;Answer:Create Table -table name- ( columnName, dataType )
Category:SQL;Question:What are the different types of Normalization in the database?;Answer:There are five normal forms in SQL, labelled 1NF to 5NF. 1NF ensures that each column contains only atomic values. 2NF Eliminates partial dependencies. 3NF Eliminates transitive dependencies. 4NF Deals with Multi-Valued dependencies. Finally 5NF addresses join dependencies.
Category:Object-Oriented Programming;Question:What are the principles of OOP?;Answer:There are four basic principles, Encapsulation, Inheritance, Polymorphism, and abstraction. Encapsulation is a principle that seeks to hide the implmentation details of objects from the outside world. It states that all important information is contained within the object, and only selected data is available externally. Inheritance is a principle that enables developers to create new classes based on existing (parent) classes, with the option of overriding or augmenting their properties and methods. Polymorphism is a principle that complements inheritance by allowing objects of different classes to perform actions with the same name using different code. Abstraction helps you focus on a system's essential elements and ignore the less important details that have no effect on its key features. 
Category:Object-Oriented Programming;Question:What is the benefit of Inheritance?;Answer:Inheritance is useful in programs as it simplifies maintenance and prevents code duplication. By using logic of the parent class in the child class, developers can create objects that share code or logic, yet are different.
Category:Object-Oriented Programming;Question:What is a class?;Answer:A Class is the template definition of methods and variables in a particular kind of object.
Category:Object-Oriented Programming;Question:What is an object?;Answer:An object is a specifc instance of a class, and contains real values instead of variables. It is a component of the program that knows how to perform certain actions and hgow to interact with other elements of the program.
Category:Object-Oriented Programming;Question:What are immutable objects and how do you change them?;Answer:An immutable object is an object whose state cannot be modified after it is created. As the definition of immutable implies, you cannot change or modify an immutable object in any capacity after it is created.
Category:Object-Oriented Programming;Question:How would you utilize Polymorphism in one of your projects?;Answer:Polymorphism is the ability for something to take on many forms. Class Objects that are inherited from the same parent class and have the same names but different behaviors. For example, Dogs and Cats are both animals, however a Dog will Bark, while a Cat will Meow.
Category:Object-Oriented Programming;Question:What is Overloading? What is Overriding? When would you use these and why?;Answer:Overloading happens when you keep the same method name, but change the number or type of parameters. Overriding occurs when you keep the same method name and signature, but change the implementation. You can overload private and static methods, but you cannot override them. You would use Overloading to perform the same action, but with different variables, such as an Add function that adds integers, and an Add function that adds floats. Overriding would be used to distinguish different types of animals. As an example, a Kangaroo bounces on two feet while a tiger walks on four feet.
Category:Object-Oriented Programming;Question:What is Encapsulation?;Answer:Encapsulation is the method where we bundle the data and methods that work on that specific data within one unit. This is often used to hide an object's internal representation or state from the outside.
Category:Object-Oriented Programming;Question:What are abstract methods?;Answer:Abstract Methods are when the parent class has a named method, but its child classes implements the logic. Using this, everything that inherits from the parent class will have that method available, but will be able to use it in different ways.
Category:Object-Oriented Programming;Question:What is an interface?;Answer:An interface acts as the abstraction of a class. The class that inherits from an interface must implement all functions within the interface.
Category:Object-Oriented Programming;Question:When is abstraction necessary?;Answer:It simplifies complex tasks by hiding unnescessary details and presenting only the essential features of an object or system.
Category:Object-Oriented Programming;Question:What is the difference between Run-Time Polymorphism and Compile-Time Polymorphism?;Answer:Complie-Time Polymorphism is whenever an object is bound with its functionality at compile time. This is achieved via Method Overloading. Run-Time Polymorphism is whenever an object is bound with the functionality at run time. This is done via method overriding.
Category:Object-Oriented Programming;Question:What are the two ways of inheriting something?;Answer:There is Single inheritance, meaning Class B inherits from Class A. MultiLevel inheritance, where Class C inherits from Class B, which inherits from Class A. Multiple Inheritance, where Class C inherits from both Class A and Class B. Hierarchical Inhertiance, where Class B and C inherit from Class A. Finally there is Hybrid Inheritance, where Class D inherits from Class B and C, which both inherit from Class A.
Category:.NET;Question:What is a constructor?;Answer:A constructor is a method used to initialize objects. The constructors can optionally have parameters associated with them.
Category:.NET;Question:What is the difference between Value and reference types in C#?;Answer:A value type is a type that, when declared as a variable, allocates some data at a memory address. A reference type is similar, but it instead holds a reference memory address to another part of memory where the memory for the data actually lives.
Category:.NET;Question:How do you perform exception handling in C#?;Answer:By using the try catch block. The try section will test the code within for errors. If there are any errors, the catch block will handle the exception gracefully, or simply print out what went wrong. You would utilize the throws function in order to throw a specifc type of Exception if it isn't automatically covered by the baseline code.
Category:.NET;Question:What is a Singleton?;Answer:A singleton is an object of which there is only one of. You would create this by having any references to that object get theexact same instance of that object, rather than create a new one.
Category:.NET;Question:How would you empty variable memory when you no longer need it?;Answer:By utilizing the IDiposable interface, we can call the garbage collector manually. However it should be noted that C# handles Garbage Collection automatically.
Category:.NET;Question:What are using statements?;Answer:There are two purposes to the "Using" keyword. The first is the directive, which is used to import namespaces at the top of a code file, and enable access to classes under those namespaces. The second is the statement, which ensures that classes that implement the IDisposable interface call their dispose method when the using block finishes. 
Category:.NET;Question:What is the difference between Authorization and Authentication?;Answer:Authentication is the process of logging in to the system in general, and confirming that the user input matches a record in a database. Authorization is what that user can actually do within the application. For example, in a Group Chat application, a Normal user may type into the chats they are Authorized to be in, while an Admin can chat wherever they wish.
Category:.NET;Question:How would you validate user input data?;Answer:It depends based on the context. If a user is logging in with a user name and password, then the input would be checked against the database to see if it matches. 'User1010' is not equal to 'us3r1010', for example. If we're creating an account, then we can check if the data is beyond a certain character limit, or below a character count. For example, if the user types in 'pw' for password, but we have a validation to check if passwords are more than three characters long, then it would be an invalid password.
Category:.NET;Question:What is the difference between error logging and debugging?;Answer:Error Logging is the process of showing what the error actually is, preferably in human readable terms. "C# Exception CE20002254" is not exactly human readable, or understandable, where as "Error: User entered a null value for control" is. Debugging is the process of correcting those errors and removing them from your program.
Category:.NET;Question:What are access modifiers?;Answer:Access modifiers are keywords used to specify the declared accessibility of a member or a type. Public, Protected, Private and Internal. Public means that the member or type can be accessed from anywhere. Protected means that only the containing class or types derived from the containing class can use it. Internal is limited to the current assembly only. Finally, Private is only the Containing Type can access it.
Category:.NET;Question:What are SOLID principles?;Answer:SOLID principles are design principles that enable us to manage several software design problems. Each letter of SOLID represents a different principle. S, for Single Responsibility Principle, means that every class or similar structure in your code should have only one job. O, for Open-Closed Principle, means that a software module or class is open for extension, and closed for modification. Open for extension meaning that new functionality can be added only when new requirements are generated, and Closed for Modification means that we've already developed a class, and it has gone through unit testing. The class / module should not be modified until after we have found bugs. L, for Liskov substitution Principle, means that we should be able to use any derived class instead of a parent class and have it behave in the same manner without modification. I, for Interface Segregation Principle, means that clients should not be forced to implement interfaces they don't use. Instead of having one big interface, many small interfaces are preferred based on a group of methods, each serving one sub module. Finally D, for Dependancy Inversion Principle, means that High-Level Modules / Classes should not depend on Low-Level modules / classes. First, both should depend upon abstractions. Secondly, abstractions should not rely upon details. Finally, details should not depend on abstractions.
Category:.NET;Question:What is boxing and unboxing?;Answer:Boxing is the process of converting a value type to the type object or to any interface type implemented by a value type. Unboxing is the reverse, where it extracts the value type from the object. For example, an int variable can be placed inside an object type. The object type can then assigned to an int.
Category:.NET;Question:What is LINQ and how do you use it?;Answer:LINQ stands for Language Integrated Query, and is available when the programmer adds in the 'using System.Linq' directive. LINQ is written in a declarative query syntax, in a similar manner to SQL, utilitzing 'from', 'where', 'select' and so on. For example, IEnumerable<int> scoreQuery = from score in scores where score > 80 select score' is a LINQ statement.
Category:.NET;Question:What is a lambda expression?;Answer:Lambda expressions are used to create an anonymous function, and is denoted by =>. An example of a Lambda function is var squaredNumbers = numbers.Select(x => x * x).
Category:.NET;Question:What's the difference between an Int and a String?;Answer:Strings are used to contain words and phrases, whereas Ints are used to hold numbers. It should be noted that Ints do not hold decimals, and can only hold up to a max of 2147483647.
Category:.NET;Question:How do you achieve multiple inheritance in C#?;Answer:We would utilize interfaces, as C# cannot inherit from multiple classes, but we can inherit from multiple interfaces.
Category:.NET;Question:How would you use a connection string without hardcoding it into your program?;Answer:In our ApplicationDbContext file, we would create a config object using ConfigurationBuilder. In the ConfigurationBuilder, we would add a JSON file called 'appsettings.json', where our connection string would live. This file would not be uploaded to a github or other repository.
Category:.NET;Question:What are the different types of constructors?;Answer:There is the Default constructor, which is the basic constructor that all classes have. A Parameterized Constructor, which the programmer passes in variables that would be used in the creation of the object. Copy Constructor, which as the name implies copies variables from another object. Private Constructor, which is a constructor made private by the Private access modifier, is a constructor that cannot be inherited from, and it is also impossible to create an instance of that class using that constructor. Finally, a static constructor is called just once in the class, and is called when the first reference to a static member of the class is made.
Category:.NET;Question:Can you have multiple catch blocks?;Answer:Yes, you can. Each catch block would handle a different exception.
Category:.NET;Question:How do you connect SQL to C#?;Answer:First, install the Entity Framework NuGet package. This is done by typing in your project's terminal "Install-Package EntityFramework". Next, you would define your data model, creating a class specifically for that entity. After that, create a DbContext class to represent your database context. You would then configure your connection string, using an appsettings.json file. Once that is all set up, call Database.Initialize to initialize your database, and then use DbContext in your code to perform database operations.
Category:.NET;Question:What is the difference between a string and string builder?;Answer:A string is considered immutable, whereas a StringBuilder is an example of a mutable item, and can be extended to store more characters if required.
Category:.NET;Question:What is the difference between a struct and a class?;Answer:A Struct is a value type, whereas a Class is a reference type. Value Types contain their data directly on the stack, while reference types store a reference to an object containing the data on the heap. This difference is important because it affects how the objects are copied and passed around in memory.
Category:.NET;Question:What is dependancy injection?;Answer:Dependancy injection is a software design pattern which enables the development of loosely coupled code. This is also known as IOC, or Inversion of Control. As an example, if a class named Client needs to use a Service class component, the most you can do is make your client aware of an IService interface instead of a Service Class. With this execution, you get to change the implementation of the Service Class as many times as wanted without breaking the host code.
Category:.NET;Question:What is the difference between a global variable and a static variable?;Answer:A static variable by default IS a global variable, stored neither in the stack or the heap, and it has the same lifespan as its program. Unlike a global variable, however, it has a limited scope which is inside a function. It is a global that's only visible instead of the function in which we declare it.
Category:.NET;Question:What are dependencies?;Answer:A dependancy is an object that another object depends on.
Category:.NET;Question:What is Serialization and how do you implement it?;Answer:Serialization is the process of converting an object into a stream of bytes to store the object to memory, a database or a file. Its main purpose is to save the state of an object in order to be able to recreate it when needed. The reverse process is called deserialization.
Category:.NET;Question:What is IDispose and what are its uses?;Answer:IDipose is related with the using construct, and it's primary purpose is to oversee resource management. By calling the Dispose method, we can free the unmanaged resources that the garbage collection can't handle by itself.
Category:.NET;Question:What is IEnumerable and how do you use it?;Answer:IEnumerable is an interface that defines a single method called "GetEnumerator", which is used to go through all of the items found in a given collection. The best use case for this interface is by using a foreach loop.
Category:DevOps;Question:What is a CI/CD Pipeline?;Answer:CI / CD means Continuous Integration and Continous Development/Deployment respectively. A CI/CD Pipeline is an automated process that streamlines the creation, testing and deployment of applications. 
Category:DevOps;Question:What are the different phases of CI/CD?;Answer:The four major phases are Source, Build, Test and Deploy, in that order. Source involves the management and storage of source code in a controlled and versioned manner. Build involves collecting all of the source code from the source phase, and transforming it into a tangible product that can be executed in an environment (Example-A JAR file for Java, or a Docker Image for Docker). The Test stage is where the application is subjected to automated testing to ensure it meets all functional and non-functional requirements. Finally, the Deploy phase is where the application is released into the production environment, and is made accessible to end-users.
Category:DevOps;Question:What is DevOps?;Answer:DevOps combines development and operations to increase the efficiency, speed, and security of software development and develivery compared to traditional processes.
Category:DevOps;Question:What is code smell, and how does static code analysis help with it?;Answer:Code smells are signs of potential issues in code that can lead to bugs and other problems. Static Code Analysis tools can help detect code smells and provide feedback and suggested fixes to developers.
Category:DevOps;Question:Why is Monitoring and Logging important for DevOps?;Answer:It is important for DevOps to maintain optimal application performance. Using a combination of logging tools and real-time monitoring systems helps improve observability and reduces the time spent sifting through log files to determine the root cause of performance problems.
Category:Docker;Question:What is the difference between a container and a virtual machine?;Answer:Virtual Machines provide an abstracted version of the entire hardware of a physical machine, including the CPU, memory, and storage. Containers are portable instances of software with its dependencies that run on a physical or virtual machine.
Category:Docker;Question:What are the advantages of using Docker?;Answer:The advantages of Docker include, but are not limited to, it's portability, the ability to Isolate, its Resource Efficiency, and it's Scalability. Docker containers can encapsulate applications and their dependencies, making it easy to migrate applications between different environments seamlessly. Docker containers runs independently, which means that it will not interfere with other containers on the same machine or server. Since containers share the same underlying operating system kernel, they are much lighter and require less disk space and RAM. Finally, you can create multiple instances of a container and distribute the workload efficiently using container orchestration tools such as Kubernetes or Docker Swarm.
Category:Docker;Question:How do you run a docker container?;Answer:For the CLI in Docker, you would use the 'docker run' command. You can also restart a stopped container with all previous changes intact using the 'docker start' command.
Category:Docker;Question:How do you view your currently running containers?;Answer:In the Docker CLI, you would use 'docker ps -a' to view a list of all containers. This list includes containers that are stopped.
Category:Docker;Question:How do you shut down a running container?;Answer:In the Docker CLI, you would user 'docker stop'.
Category:Docker;Question:How do you pull an image from DockerHub?;Answer:In the Docker CLI, you would use 'docker pull' to pull the docker image.
Category:GitHub;Question:How do you manually trigger a workflow?;Answer:On Github.com, navigate to the main page of the repository. Under the repository name, click on Actions. In the left sidebar, click the name of the workflow you want to run. Above the list of workflow runs, click the 'Run Workflow' button.
Category:GitHub;Question:Explain the relationships between triggers, jobs and steps;Answer:A Job is a set of steps in a workflow that is executed on the same runner. Each step is either a shell script that will be executed, or an action that will be run. Triggers, or Events, is a specific activity in a repository that triggers a workflow run, which will trigger the jobs, and subsequently the steps.
Category:GitHub;Question:How do you store credentials and other sensitive information?;Answer:You would utilize a variable known as a Secret. Secrets are variables that you create in an organization, repository, or repository environment. The secrets you create are available to use in GitHub Actions Workflows, and can only be read if you explicitly include the secret in a workflow.
Category:GitHub;Question:How do you create a workflow?;Answer:If it doesn't already exist, create a new public repository named .github in your organization. After that, create a directory named 'workflow-templates'. Inside of the templates directory, create a new workflow file. This new file is a YAML file (extension .yml). Lastly, create a metadata file inside of the 'templates' directory. This metadata file is a JSON file that has entries for 'name', 'description', 'iconName', 'categories', and 'filePatterns'.
Category:GitHub;Question:How do you automatically run unit tests as part of a workflow?;Answer:The process will vary from project to project based on the coding languages being used, but the general process is to create a workflow, then create a job to run those tests.
Category:Azure;Question:How do you deploy and interact with an Azure T-SQL database from a .NET Application;Answer:First, create the app service, database, and cache in the Azure Portal, and follow the steps displayed in the website, making certain that you select the Basic Hosting plan and SQLAzure as the database engine. After that, verify your connection strings and deploy your sample code using Github Actions.
Category:Azure;Question:What are the different service types and models of cloud infrastructure?;Answer:The different service types are Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS).
Category:Azure;Question:What is a Service Level Agreement?;Answer:The Azure SLA defines the commitments made by Microsoft Azure to its customers regarding the availability and performance of the Azure Services.
Category:ASP.NET;Question:What is ASP.NET?;Answer:ASP.NET is an open source web framework, created by Microsoft for building modern web apps and services with .NET.
Category:ASP.NET;Question:What is ASP.NET MVC?;Answer:Unlike ASP.NET, ASP.NET MVC creates a seperation of application tasks, testability, and test-driven development (TDD) by default. All core contracts in the MVC Framework are interface-based and can be tested by using mock objects. In addition, it provides an extensible and pluggable framework. This means that components of the ASP.NET MVC framework can be easily replaced or customized.
Category:ASP.NET;Question:What is REST?;Answer:REST, or REpresentational State Transfer, is a Software architectural style that was created to guide the design and development of the architecture for the World Wide Web. It defines a set of constraints for how the architecture of a distributed, Internet-scale hypermedia system, such as the Web, should behave.
Category:ASP.NET;Question:What is the purpose of unit testing?;Answer:Unit Testing is designed to check that a block of code runs as expected, according to the developer's theoretical logic behind it.
Category:ASP.NET;Question:How many types of Authentication are there?;Answer:There are three types of authentication. Form Authentication, Passport Authentication, and Windows Authentication. 
Category:ASP.NET;Question:What is Razor and a .cshtml file?;Answer:Razor is a Markup Syntax for embedding .NET based code into Webpages. Files containing Razor are denoted by a .cshtml extension.
Category:ASP.NET;Question:What is Caching?;Answer:The page output cache stores the contents of a processed ASP.NET page in memory. This allows ASP.NET to send a page response to a client without going through the page processing lifecycle again.
Category:ASP.NET;Question:What is CORS?;Answer:CORS, or Cross-Origin Resource Sharing, is a HTTP-Header based mechanism that allows a server to indicate any origins other than its own from which a browser should permit loading resources.
Category:ASP.NET;Question:What is the difference between POST and PUT?;Answer:A PUT request will update or replace existing data on the server. POST will create new data on the server, but it will not modify any existing data.
